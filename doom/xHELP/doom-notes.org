#+TITLE:   doom-notes.org
#+DATE:    Started 2020-05-17
#+AUTHOR:  donagh mccarthy
#+FILEPATH: ~/PORTABLE_ENV/doom/xHELP/doom-notes.org
#+STARTUP: overview
#+options: il
#+tags:    help orgmode org-mode donaghs
#+EDITED:  2023-09-06; 2023-08-09; 2023-07-12; 2023-04-07; 2023-02-24; 2023-01-03; 2022-12-19; 2022-12-16; 2022-09-25


* DOOM EMACS
** abbrevs
//home/donagh/.emacs.d/abbrev_defs

If making changes to above file maybe restart doom to register this file?

invoke abbrev-mode usin M-x abbrev-mode

M-x list-abbrev will list global abbrevs

see config.el too. Abbrevs section / function
Need to C-h r r after changes.

** appearance
*** theme
    [SPC] h t <-- select theme
*** replace *** with nicer/cleaner heading markers
HOW?
*** Change ellipsis for folded headings
In config.el add
(setq org-ellipsis " ▼ ")
** bookmarks
To allow me to jump to a bookmarked file or location easily.

SPC RET  Create or jump to bookmark i.e. list bookmarked files/locations
M-x bookmark (for a list of available commands)
SPC b m  Set bookmark   [ emacs: C-x r m ]
M-x bookmark-bmenu-list [ emacs: C-x r l ]

** buffers
[SPC] ,                <-- switch buffers
[SPC] b b              <-- list current buffers
[SPC] b i              <-- list current buffers
[SPC] <                <-- change buffer
[SPC] .                <-- list files in current directory
[SPC] [SPC]            <-- find file in PARENT directory
** calculator
*** Eval
[SPC] ; <-- single line buffer
*** Calculator
M-x calc
https://www.emacswiki.org/emacs/Calc_Tutorials_by_Andrew_Hyatt
-----
Usage:
<number> [Enter]
<number> [Enter]
<function> [Enter]

(Use s to find more modes)
eg s S for sin
** copy / paste
*** How do you copy to the system clipboard?
use register: "+
Highlight word(s) using (vim) v and y
To copy full line to system clipboard: "+Y (like yy)
*** How do you paste from the system clipboard?
TL;DR - use the middle button of the mouse.

Paste into current file
[SPC] i r
[SPC] i y <-- displays system clipboard (killring) 2020-05-17_20:36 -- at last
Update: 2021-04-16: this did not work for me now. The [SPC] i r works!
[SPC] i r <-- evil register <-- equivalent to :reg in vim

Update: 2021-05-27 NOT WORKING. I copy a URL into the system clipboard but cannot paste into doom-emacs. WTF?
SOLUTION: Use the middle button of the mouse! This definitely worked. But why no keybinding?
Possible alternative:
On Linux, you can use xclip.el (https://www.emacswiki.org/emacs/xclip.el) to link the kill-ring to the clipboard from Emacs running in terminal (without losing the multiple-kill and yank capability).
** completion
:about:
added 2022-04-25
:end:
Some modes/packages that are available:

flycheck, an excellent as-you-type syntax checker.
icomplete
ivy
company
ido
fido-mode - an enhanced 'icomplete-mode' that emulates 'ido-mode'
** completion directory searching
2021-12-03
when I [SPC] f f I don't want to have to type everything I want tab completion - which plugin?
Possible assistance:
[SPC] s j <-- jump list

** configuration
.doom.d directory is the preferred place to store your custom config (not within the Doom directory itself).
See the documentation (Henrik is super great about this)
My config files __are__ indeed in /home/donagh/.doom.d and symlinked to /home/donagh/PORTABLE_ENV/doom/*.el

** directory tree navigation
*** treemacs [SPC] d
[[treemacs]]
*** navigating [SPC] p r
[SPC] f r <-- list recent files
[SPC] p r <-- recently visited files in current directory

*** files inside current project [SPC] [SPC]   <-- <space> <space>
this allows to explore inside the current project
*** files outside current project [SPC] .  <-- <space> dot
this allows to explore outside the current project
** discoverability
M-x
describe-bindings
describe-command (SPC h x)
which-key   (SPC)
describe-key (SPC h k)
menu-bar-mode
toolbar-mode
describe-face (SPC h F)
appropos
describe-function (SPC h f)
describe-variable (SPC h v)
describe-mode (SPC h m)
describe-symbol (SPC h o)
describe-syntax (SPC h s)
describe-char (SPC h ')
customize
info (SPC h i)
** drawers
aka [[property drawers]]

** elisp
*** REPL
M-x ielm or [SPC] o r
*** see [[snippets]] below for begin_src
** files
- save file -> :w OR [SPC] f s
- save buffer -> [SPC] b s OR :w OR [SPC] s [SPC]
- open a file -> [SPC] f f and select your file for opening
- open a recent file -> [SPC] f r
- insert current file path [SPC] i F <-- /home/donagh/PORTABLE_ENV/doom/doom-notes.org
- finding files: [SPC] f
- rename an existing file - C-x d (for dired) nav to required dir and edit filename  in the buffer
** general notes
- See spacemacs_notes above. Lots of stuff applies in doom-emacs.
** headings
Remove a * <-- to promote to parent level
M - up <-- to move up
M - down <-- to move down
** help
C-h i    :: info; list of Help Tutorials
C-h k    :: help on keys
C-h m    :: help on modes

see also [[help / reference]] in org-mode below

FAQ - [SPC] h d f

To refresh the config.el file
C-h r r
OR doom/reload (in the /home/donagh/.emacs.d/doom-emacs/bin folder)

** how do I
*** Add a package
[[install new package]] TL;DR unhighlight in init.el
discover new packages : Alt-x lists installed packages
*** Fix things in doom
**** doom doctor
     ~/.emacs.d/bin/doom doctor
**** doom build
     ~/.emacs.d/bin/doom build
*** Get zo, zm, zR etc. to work
UPDATE: zo and other native vim folding commands come with evil
UPDATE: (2022-12-19) - z o is not functioning so I am using z ; instead - see config.el
*** Navigate to point in file
**** Using [[avy]] package
g s [SPC] <letters> <-- In-file navigation.
Mnemonic: (g)oto (s)ubject
**** Using swiper: [spc] s s
*** Set up [SPC] shortcuts
Edit ~/PORTABLE_ENV/doom/config.el
e.g. [SPC] w w for write and quit

*** Shortcut to config dir [SPC] f p
*** Split window vert - Ctrl x 3
*** Have hinting when file-searching - ivy
2021-12-03
say I press [SPC] f f : I would like hints / popup to select file (there is jump list but...)
*** Go to my private config
[SPC] f p      <-- go to my config folder
*** Publish to html/pdf/Latex
M-x org-export-dispatch SPC m e
OR
C-c C-e
** icons
M-x all the icons 

- see config.el and https://github.com/domtronn/all-the-icons.el
https://github.com/domtronn/all-the-icons.el/wiki
 python
 coffee
*** I would like to upgrade the leading * to something nicer
How do I achieve this?
** images
images can be displayed within the buffer with the following command: C-c C-x C-v (org-toggle-inline-images) <-- z i
OR Move over image / link and press [Enter]

[[/run/media/donagh/01d4c077-4709-4b5b-9431-087bc9060d68/REPOSITORIES/images/square-wheel-cartoon.png]]
[[/run/media/donagh/01d4c077-4709-4b5b-9431-087bc9060d68/REPOSITORIES/images/2_png_files/Pierse_Brosnan.png]]

[/run/media/donagh/01d4c077-4709-4b5b-9431-087bc9060d68/REPOSITORIES/images/00TEST/selfie.png][selfie]]

This is an image of a thrush.
[SPC] w o to enlarge window
** installation notes
*** install
from https://github.com/hlissner/doom-emacs
*** config files
"doom install will deploy three files to your DOOMDIR (/home/donagh/.doom.d)
_init.el_
    Where you’ll find your doom! block, which controls what Doom modules are enabled and in what order they will be loaded.
    This file is evaluated early in the startup process, before any other module has loaded.
_config.el_
    Where 99.99% of your private configuration should go. Anything put here will run after all other modules have loaded.
_packages.el_
    Where you declare what packages to install and where from.
   
*** configuration
/home/donagh/.doom.d/*
These files are symbolic linked to /home/donagh/PORTABLE_ENV/doom/* - to keep my config if reinstalling
/home/donagh/.emacs/doom-emacs/init.el

** keybindings
See also [[shortcuts]] below
-----------------------------------------------------------------
doom-emacs
-----------------------------------------------------------------
[SPC] m        <-- local to to the file type
[SPC] :        <-- M-x
gi             <-- go to previous insert position
[SPC] f p      <-- go to my config folder
C-S-f          <-- toggle full screen - equivalent to F11
C-=            <-- increase text size - equivalent to zoom in
C-_            <-- decrease text size - equivalent to zoom out
[SPC] f p      <-- select file from doom-emacs config
[SPC] w v      <-- split vertical

-----------------------------------------------------------------
DONAGHS
-----------------------------------------------------------------
[SPC] w [SPC]  <-- save-buffer = [SPC] f s

** line numbers
[SPC] t l <-- toggles line numbers (which are relative by default)
Mnemonic: (t)oggle (l)ine-numbers
** links
*** [ [link] ][ description ]] <<< with NO spaces
*** Make links
**** Method 1
[SPC] l OR C-c C-l <-- In normal mode
Then type info
For infile ref: the headlines
For external file: file: <filepath>
For elisp: elisp: org-agenda
Others are available
Example:
[[https://www.donaghmccarthy.ie][donaghmccarthy.ie]]
**** Method 2
[SPC] m l l
Then type in the name of the link and then the description
**** Method 3
Type [[x][]]
and put the link / URI instead of x and the description in the second pair of [].
**** To a heading
example:
[[file+emacs:org.org][Health]]
which is the below with a ] at the end (which hides the details)
[[file+emacs:org.org][Health]

** magit
[[Magit][Magit]]

** markdown for emacs
Bold *bold*
Italic /italic/
Underline __underline__
Strikethrough ~strikethrough~
** math
#+CONSTANTS: pi=3.14159265358979323846
** minor modes
*** To check available minor modes -> C-h m
*** testing links
+ [[projects][projects]]

** packages
see also org-mode/packages
*** emacs
REM: DOOM doesn't use emacs packages.el it uses straight.el instead for package management. Use init.el
**** install new package
Unhiglight in init.el
The following does not apply to Doom emacs. For Doom emacs,
[SPC] : (or M-x)
Then type: package-install (but this only installs if for the current sesssion - best is to use packages.el)
------
in packages.el (require '<package>) and then ->% doom sync
**** to run a package
   M-x (also [SPC] :)
   - list-packages (available, installed, builtin )
**** List available, built-in and installed packages
[SPC] : list-packages
*** INSTALL Packages in doom-emacs
**** Add new package

https://github.com/hlissner/doom-emacs


From packages.el

;; To install SOME-PACKAGE from MELPA, ELPA or emacsmirror:
;(package! some-package)
;; EXAMPLE to install rec-mode [cf. AUR recutils - Set of tools and libraries to access plain text databases called recfiles ]
(package! rec-mode)
then do -> % doom sync


Packages are declared in packages.el files.

Use -> % doom build after adding a package (or doom doctor if there are problems)

**** How do I browse available packages availble in doom-emacs?

M-x package-refresh-contents
M-x list-packages
(current example is pdfgrep - which is present on 2022-09-25 )
Some hints at https://github.com/doomemacs/doomemacs/issues/1468
Note: The preferred (only?) way to install non-built-in packages is via packages.el

**** Plain emacs
- M-x packge-install
- in config.el (use-package origami)
*** avy
**** About
For fast navigation within a file.
Like easymotion plugin in vim
NOTE: pre-installed in doom
In-file navigation - specifically on current screen. Highlights using one or two letter pairs to highlight the target
**** Commands
g s [SPC] <letter> <-- In-file navigation. <-- avy
First the gs [SPC] will dim the text and then <letter> will be highlighted

OR

g s s CHAR1 CHAR2 and then select the single letter <-- swiper
Example:
To move to f of fruit <-- g s s fr then press hl letter

elephants in your head
oranges are not the only fruit
plain herds are better than awful
*** from github
**** About
see
**** Org-roam
***** Install
Successful on 2020-08-04
In [[file:packages.el][Packages.el]]
(package! org-roam
  :recipe (:host github :repo "org-roam/org-roam"))

*** counsel
*** company
A modular text completion framework

*** dired
:about:
File explorer
New buffer below showing the contents of (current) directory
:end:
**** A short intro to Dired
Dired is how you interface with a directory
Name comes from Directory Editor
Move with h,j,k,l
toggle ( for simple view
enter to go into a directory
- to go back up
+ and enter a file name to create a directory
d to mark for deletion, x to delete
space . to create or find a file
\*/ to select all directories, t to switch between files and directories
U to unselect all
m to mark a specific file or directory
CTRL + w + v window split vertically
CTRL + w + w to switch windows
C copy to another window
R move to another window
dired-do-what-i-mean-target set to true
i to edit file/dir name
**** Commands
C-x d OR [SPC] .  OR [SPC] f d

Close with q

To remove details: ( [ie show file/dir names only]
To go to parent:   -
Add a new directory: +
Delete: D [to mark the file/dir] then x
Copy: D [to mark the file/dir] then C
chmod: M
Select only directories: /* and then t to toggle between directories and files
Select a file or directory: m and then u to unselect
CONFLICT HERE: 'u' in dired unmarks, but evil-mode it is undo
Change a file / dir name: i and then make changes

*** evil
:about:
NOTE: Pre-installed in doom
vim bindings for emacs / DOOM
:end:
**** evil-snipe
Navigating in files - short distances [but see [[avy]]]
Enable: M-x evil-snipe <-- toggles on/off
f <letter> highlights all <letter>s forward and ; moves to next one.
NOTE: For more comprehensive in-file search look at avy.
*** eww
:about:
    emacs web browser M-x e
:end:
*** origami
folding in markdown
*** flycheck
Syntax highlighting
cf. flymake
*** flymake
Syntax highlighting

*** helm
a generic completion mechanism for Emacs - in insert mode.
see also : ivy, vertico (below)
*** image-dired
For viewing images (not great)
*** ivy
Ivy, a generic completion mechanism for Emacs - in insert mode.

Useful when searching for files with [SPC] f f and tab completion
Toggle ivy using M-x ivy
Select one string from a list of strings in a pop-up instead of having to type it out.
Also there is a jumplist available with ivy. [SPC] s j
*** neotree
- use [[treemacs]]
View directory tree in a panel
added (require 'neotree) to config.el on 2020-05-20
*** nov.el

https://depp.brause.cc/nov.el/

Major mode for reading novels in emacs
Usage
Open the EPUB file with C-x C-f [ or SPC f f ] ~/novels/novel.epub, scroll with SPC and switch chapters with n and p.
More keybinds can be looked up with F1 m.


**** Issues
2023-02-24
Not working. Can't open the epub file.
*** org-babel

Org babel transforms the lowly executable source block into a complete literate programming environment,
Invoke using <s[TAB] <language>

Example:

#+BEGIN_SRC python
#!/usr/sbin/python
def fib(n):
    a = 0
    b = 1
    for _ in range(n-1):
        a, b = b, a+b
    return b if n > 0 else 0

print(fib(5))
print("done")

#+END_SRC

#+RESULTS:
: None





Allows to have short snippets of code that can be run inside org-mode. ?Literate programming?
See [[snippets ][snippets]] below

*** projectile
**** About
 Its goal is to provide a nice set of features operating on a project level without introducing external dependencies

cf. also projectile for treemacs
**** Background
REM: Projectils confines the scope of files available to those in the project you selected with [SPC] p p
-----
If you are more familiar with IDEs like Eclipse or IntelliJ, you probably already have a concept of a project in your mind. It’s basically a folder for a particular codebase (probably under version control) that is pretty much a cohesive unit that you work on independently. In Emacs, this grouping and identification is usually managed by Projectile. With Doom, this is installed by default.

from https://medium.com/urbint-engineering/emacs-doom-for-newbies-1f8038604e3b
'
In order to manage projects that you already have, you need to let Projectile know where the projects reside.
Inside of Doom, you do this by modifying the init.el inside your own custom configuration folder:

    /home/donagh/.emacs.d/modules/private/<your-user-name>/init.el

For example, my username is “jdemaris” so my folder is /home/donagh/.emacs.d/modules/private/jdemaris is my custom folder. Keeping all of your changes in here makes it safer to update the Doom config whenever new versions come out. Inside of my init.el file, I have added a number of Projectile projects:

    (projectile-add-known-project "/home/donagh/Projects/playground/elixir")
    (projectile-add-known-project "/home/donagh/Projects/playground/otp")
'

    test addition
**** Commands
REM: The projects must be made known to Doom in the init.el file. cf.[[Background][Background]]
---------
[SPC] p p (OR in the Doom splash screen select open project)
**** Idea of a project
*** swiper
For searching for text in a buffer
[SPC] s b
[SPC] s s  <-- swiper that is not line based - input two letters and [ENTER]
*** treemacs
**** About
View directories in a tree structure in a separate panel
**** Commands
[SPC] d
M-x treemacs <-- opens explorer for CURRENT directory
[SPC] d <-- toggles close / open
:q in treemacs pane to quit OR [SPC] b d
use vim keys for navigating
*** vertico
[[https://docs.doomemacs.org/latest/modules/completion/vertico/][vertico online]]

This module enhances the Emacs search and completion experience, and also provides a united interface for project search and replace, powered by ripgrep.
It does this with several modular packages focused on enhancing the built-in completing-read interface, rather than replacing it with a parallel ecosystem like ivy and helm do.
** projects
*** manage projects

using [[projectile][projectile]]
-----
If you are more familiar with IDEs like Eclipse or IntelliJ, you probably already have a concept of a project in your mind. It’s basically a folder for a particular codebase (probably under version control) that is pretty much a cohesive unit that you work on independently. In Emacs, this grouping and identification is usually managed by Projectile. With Doom, this is installed by default.

from https://medium.com/urbint-engineering/emacs-doom-for-newbies-1f8038604e3b
"
In order to manage projects that you already have, you need to let Projectile know where the projects reside.
Inside of Doom, you do this by modifying the init.el inside your own custom configuration folder:

    /home/donagh/.emacs.d/modules/private/<your-user-name>/init.el

For example, my username is “jdemaris” so my folder is /home/donagh/.emacs.d/modules/private/jdemaris is my custom folder. Keeping all of your changes in here makes it safer to update the Doom config whenever new versions come out. Inside of my init.el file, I have added a number of Projectile projects:

    (projectile-add-known-project “/home/donagh/Projects/playground/elixir”)
    (projectile-add-known-project “/home/donagh/Projects/playground/otp”)"
    test addition
** property drawers

Property drawers stay folded by default, and are intended to store a collection of key-value pairs, but they don't get exported by default, and so are a good way to keep your notes and your writing together and then export, as needed when drafting is done.

Example of propert drawer. Use the TAB key to fold/unfold it.
:contents:
This is a drawer. Use the TAB key to fold/unfold it.
:end:
** search in buffer
[[search]] in current buffer

g s [SPC] <letters> <-- In-file navigation. (This is the avy package)

** shortcuts
See also [[keybindings]] above
Set in /home/donagh/PORTABLE_ENV/doom/config.el
-----------------------------------------------------------------
;; Donaghs - the following keybinding *did* work. :n indicates normal mode
-----------------------------------------------------------------
(map! :n "Q" 'org-babel-execute-src-block ) ;; Quantify!
d" 'treemacs ) ;; Directory for files / folders
(map! :n "tt" 'org-todo )
(map! :n "ts" 'org-schedule )
a" 'org-agenda )
w SPC" 'save-buffer )
j" 'outline-next-visible-heading )
k" 'outline-previous-visible-heading )
l" 'org-insert-link )
and
C-h r r to refresh config.el file

** tags :tags:

To make a tag (only on headlines) add a colon before and after a word like this :tags: Now 'tags' is a tag.

To search for a tag C-c \ OR C-c / m
SPC m l


" An excellent way to implement labels and contexts for cross-correlating information is to assign tags to headlines. "
tags are words preceded by : and ending in : e.g. :donaghs: or :work: - these can then be searched using  C-c \ OR C-c / m
see https://www.gnu.org/software/emacs/manual/html_node/org/Tag-searches.html#Tag-searches
** themes
[SPC] h t

OR M-x load-theme <-- opens available themes

Preferred theme:
2022-01-01
tsdh-dark        :: Sky blue headlines w green subs
Others:
doom-solarized-dark :: Sky blue headlines w. yellow subs
doom-acario-dark :: Blue headlines with purple subs
doom-dark+       :: Dim sky blue headlines with dim pink subs
doom-molokai     :: Cerise headlines with orange subs
doom-material    :: Gre/blue headlines w dim purple subs
** tramp
[[Tramp][Tramp]]
** sparse trees
[SPC] m s s r <pattern>
For filtering all but what you want to see
C-c / r <pattern>
eg C-c / r navig
*** windows
[SPC] w
[SPC] w L <-- to split window
[SPC] w w (toggles) <-- to move to next window

** yasnippets

webref:https://arjanvandergaag.nl/blog/using-yasnippet-in-emacs.html

   Yasnippet & Yasnippet-snippets
   [SPC] i s
  This is the "incrementally" snippet in text-mode.

[SPC] i s or just <s [TAB]


The following was a begin src block
#+BEGIN_SRC emacs-lisp
(defun great (name)
  (concat "Hello " name))

(great "Dolly")

#+END_SRC

#+RESULTS:
: Hello Dolly


(To execute: M-x org-babel-execute-source-block :: I made a keybinding to do this. It is Q )


<s and [TAB]

#+BEGIN_SRC emacs-lisp
(+ 11 43)
#+END_SRC

#+RESULTS:
: 54

ANOTHER EXAMPLE

#+BEGIN_SRC emacs-lisp
(message "hello Dolly")
(+ 222 (* 88 32))
#+END_SRC

#+RESULTS:
: 3038

Then press Q to get...
#+RESULTS:
: 3038



<l and [TAB]
#+BEGIN_EXPORT latex
/rarrow
#+END_EXPORT



appear
defamation

** workspaces
[SPC] [TAB] n create new workspace
[SPC] [TAB] <#> switch to Workspace <#> Displayed at bottom of window.

*** Bookmarks file edit
The file is located at:
/home/donagh/.emacs.d/.local/etc/bookmarks
August 2023:
I did a search & replace of 01d4c077-4709-4b5b-9431-087bc9060d68 for SD64GB so that it will be easier to mount the SDCard to the Toshiba laptop system in future.
I also made a backup bookmarks_backup_Aug2023 today 2023-08-09
* Org-mode
:about:
THIS!
A markup language with great flexibility and options to do many, many things.
Maybe see [[file:~/sd64/TODO/ORG-MODE/first.org][first.org]]  for my preliminary notes
:end:
** agenda / scheduling
My aliases:
t a      <-- agenda
t s      <-- schedule
t a t 18 r <-- list all todos
*** NOTES on Agenda
Agenda - [SPC] a and select from list
SCHEDULE - [SPC] a s OR C-c C-s
DEADLINE C-c C-d - to
*** SHORTCUT New todo --> tt
*** SHORTCUT New schedule --> ts
*** Agenda - to view agenda beyond this week: eg next four weeks --> 28 t a a
***** Here's a link with good answers
    https://stackoverflow.com/questions/32423127/how-to-view-the-next-days-in-org-modes-agenda#32426234
*** Schedule - How to
**** First, need to be on a headline item *** etc. not a plain list i.e. -
then
    t s
    C-c C-s and select date using C-j, C-h etc.
**** To set the time
SCHEDULED: <2020-07-04 Sat 09:50>
At the prompt insert the time e.g. 09:50
**** Repeat schedule - e.g.  every week +1w add inside <> as in the example below
    - Weekly shop
    SCHEDULED: <2020-06-13 Sat +1w>
    NOTE: This doesn't appear in the global TODOS because this file is not "registered" in the list of files to be checked.
**** To view schedules ie your agenda
t a a <-- to view agenda for coming week
31 t a a <-- to view agenda for coming month i.e. 31 days
Shown in light green
To appear in the global TODOS because the file must be "registered" in the list of files - how?

REM: Use z in this view to select desired period e.g. week/month
**** To register a file for TODOs
*** Deadline - How todo
[SPC] m d d or C-c C-d
**** View Deadlines
[SPC] a a & deadlines shown in pink

*** Register org-directory and org-agenda-files - see config.el
** checkboxes - Make a new checkbox i.e. [ ]

rem C-c C-c to update progress

Note: Checkboxes are not included in the global TODO list so they are often great to split a task into a number of simple steps.
**** checkbox
my ]] shortcut conflicts with making manual links ending in ]]. This is resolved by using the quickie C-c C-l
The shortcut (set in autokey) is ]] --> - [ ] (set in Autokey). To toggle checkmark, with cursor inside brackets, C-c C-c
or replace ' ' with X (or vice versa)
[/] for n of m items
[%] for percent
**** this [1/3]
rem C-c C-c to update progress
- [ ] Another item
- [ ] This funny one C-c C-x C-b
- [X] this item [2/2]
  - [X] Subitem 1
  - [X] Subitem 2
** convert heading into a todo
tt and then select from menu
Example - hover over STRT and press tt
**** .STRT
** clock mode
M-x org-clock-in
M-x org-clock-out
M-x org-clock-report
etc.

webrefs:

Clocking commands --> https://orgmode.org/manual/Clocking-commands.html

Clock table --> https://orgmode.org/manual/The-clock-table.html

** drawers
[[property drawers]]
** help
*** reference
*** In doom-emacs
[SPC] h d h :: Documetation (located at /home/donagh/.emacs.d/docs/index.org)

[SPC] h i   :: inline help
OR
M-x info    :: the help manual

*** Books
[[file:/run/media/donagh/c60cbdfc-37a8-4e08-b2dd-6286d16beb3d/SD35-BACKUP/books/Computer_books/Org_Mode_Compact_Guide.pdf][Org Mode Compact Guide]] (PDF)
*** Websites
[[https://www.orgmode.org][orgmode.org]]
https://orgmode.org/worg/               :: wiki for org-mode
https://orgmode.org/worg/org-faq.html   :: FAQ
** ISSUES
*** DONE Circles instead of asterisks FIXED
In init.el add (org +pretty) and sync. Also (org-bulllets) maybe.
On 2022-11-21 similar problem. I made an new temporary file newtodos.org and incrementtally imported everything piece by piece and thereby eliminated the problem.
*** DONE [SPC] a t nor [SPC] t t are functioning - not displaying global TODOS in a list - FIXED
    ERROR MSG: Wrong type argument: stringp,<filepath> ::
    TRIED:
    commenting out (org +pretty) and (org-bullets) in init.el.
    moved the newly created Custom.el to ~/.doom.d/original to see if _it_ is causing problems
    changed ~/all_org/org to /home/donagh/all_org/org - DID NOT WORK
    in config.el change (setq *** '~/all_org/org) to (setq *** '/home/donagh/all_org/org) - DID NOT WORK
    in config.el change (setq *** '/home/donagh/all_org/org) to (setq *** "/home/donagh/all_org/org") - THIS WORKED!!!
*** DONE Directory 'hints' when going to open a file with [SPC] f f
I think it needs Avy or Ivy or some other package like it
*** DONE Can't list agenda or TODOS after replacing directory - FIXED
**** ISSUE - 2020-10-03 - I changed org directory from ~/ALL_ORG/org to ~/all_org/org
Now I can't list agenda or todo using [SPC] a a / [SPC] a t
I did change the files config.el and init.el but to not great avail
Solution: restart doom and/or doom sync

STATUS - 2020-10-03 FIXED
** links
To make a link:
SPC L  then pick the type e.g. file,

To make a link to a heading in another file

** org-mode keywords HEADINGS /  KEYWORDS
*** Method 1
In config.el add:
  (setq org-todo-keywords
    '((sequence "TODO(t)" "NEXT(n)" "|" "DONE(d!)")
      (sequence "BACKLOG(b)" "PLAN(p)" "READY(r)" "ACTIVE(a)" "REVIEW(v)" "WAIT(w@/!)" "HOLD(h)" "|" "COMPLETED(c)" "CANC(k@)")))

The vertical bar separates the ‘TODO’ keywords (states that need action) from the ‘DONE’ states (which need no further action).
If you do not provide the separator bar, the last state is used as the ‘DONE’ state.

*** Method 2

Close doom-emacs

To add a new keyword:
/Open Welcome to the Emacs shell
see /home/donagh/PORTABLE_ENV/doom/dot_e_m_l_o_config.el
basically just symlink the files after a reboot
ln -s /home/donagh/PORTABLE_ENV/doom/dot_e_m_l_o_config.el ~//.emacs.d/modules/lang/org/config.el


~/PORTABLE_ENV/doom/xHELP
 //home/donagh//.emacs.d/modules/lang/org/config.el

and add in the REPT(r)
Then run doom sync and re-open doom-emacs
On 2021-09-30 I changed HOLD to HAPPENING for events that are under sail and /or ongoing. Repeated this on new install Oct 2021.

*** Method 3 <- this worked on 2023-02-10

I did a vimdiff and discovered that I only have to do the following
Replace lines in file: /home/donagh/.emacs.d/modules/lang/org/config.el
with
           ;"LOOP(r)"  ; A recurring task
           "STRT(s)"  ; A task that is in progress
           "WAIT(w)"  ; Something external is holding up this task
           ;;"HOLD(h)"  ; This task is paused/on hold because of me
           "HAPPENING(h)"  ; This task is happening
           "REPEAT(r)"  ; This task is recurring
           "READING(g)"  ; To promote my renascent reading habit
           "MAINTENANCE(m)"  ; For House and IT

** packages for org-mode
*** org-brain: Create a personal wiki or knowledge base using Org Mode
*** org-capture: To quickly capture a note and save it for easy recapture
**** org-capture commands
[SPC] X
[SPC] n n
stored in /home/donagh/PORTABLE_ENV/doom/org
stored in /home/donagh/Dropbox/org-mode/org/
There are a number of templates to save notes to

    In Doom it's waaay easier than Spacemacs IMHO:
    [SPC] X
    [SPC] n
    [SPC] n n <-- new note with the following options:  pers notes, pers todo, journal, templates, templates for projects
    [SPC] n F <-- Browse notes
    [SPC] n s <-- Search notes for text

*** org-present: Create presentations using Org Mode

*** org-ref: Manage citations and references within Org documents
*** org-refile: Move a Heading and all it's contents to another location within the file.

** register org directory
to allow orgmode agenda/todos to be listed with t a t
see config.el
also, ensure that there is a symlink between Dropbox and ~/all_org on the Toshiba laptop
** search
Search current buffer:
1. /               <-- vim-like buffer search
2. gss CHAR1 CHAR2 <-- this is avy
3. [SPC] s b       <-- Swiper = 'isearch-forward'
   [SPC] s s       <-- Swiper that is not line-based
4. f term          <-- evil-snipe [SPC] : evil-snipe-mode enable / disable (basically vim jump motions f,F t,I ; , etc. )
** shortcuts
Set in [[file:config.el][config.el]]
*** Modifier keys

M = Alt; S = Shift; C = Ctrl; RET = Enter / Return

- Alt RET = M RET --> New list item at same level
- M-S RET = [ ] if done at a list item
-
-
-
*** Donaghs shortcuts
[SPC] w [SPC] <-- save-buffer
AND
[SPC] s [SPC] <-- save-buffer
** symbols

See M-x org-entities-help.

Pro tip: Given a circle \Gamma of diameter d, the length of its circumference is \pi{}d.

\dagger
To make that \dagger symbol: M-x org-pretty-mode and <backslash>dagger.

Area of circle = \pi r x r

** tables
see [[https://orgmode.org/manual/Built_002din-Table-Editor.html#Built_002din-Table-Editor][org-mode tables]] (webref)

*** insert table
Type:
|------+---------+-----|
| name | address | age |
|------+---------+-----|

then press TAB to get this:

|------+---------+-----|
| name | address | age |
|------+---------+-----|
|      |         |     |

*** example table
|-------+-------------+----------------------|
| name  | address     |                  age |
|-------+-------------+----------------------|
| Denis | Ballygran   |                   43 |
| Joe   | Charleville |                   33 |
| Mary  | Mallow      |                   44 |
|       | SUM         |                  120 |
|       |             |                      |
|       |             |          @2$3 + @3$3 |
|       |             | (calc-eval 'C2+C3')? |

*** table commands
S-TAB OR M-a    :: move to column left
M-LEFT          :: move column to the left
M-S-LEFT        :: kill column i.e. delete column
M-UP            :: move row up
M-S-UP          :: kill row
S-UP            :: swap with cell above
C-c -           :: insert horizontal rule below current line
C-c ^           :: sort lines (options will be given)
C-c +           :: sum rows above :: to insert,  p followed by TAB
*** spreadsheet
[[https://orgmode.org/manual/The-Spreadsheet.html#The-Spreadsheet][The Spreadsheet]] (webref)
The table editor makes use of the Emacs Calc package to implement spreadsheet-like capabilities.
C-c ?           :: get coordinates of a cell
C-c }           :: toggle coordinates in the table
calc-eval       :: to evaluate an expression using calc (seems to be missing in doom-emacs?)

** todos
To call TODO menu or make a new todo :
  tt OR C-c C-t and select from the menu
*** Add TODO item
C-c C-t OR tt and select from the menu
*** Priorities
S-uparrow / S-downarrow on a headline - default [#B]
**** [#A] Test
*** Progress Markers
TODO [1/2] [50%] progress markers - without checkboxes
**** DONE item 1
     CLOSED: [2020-05-15 Fri 15:43]
**** item 2
**** .TODO item 3

** zArchive
*** org-roam
**** About
2020-08-04
    A plain-text personal knowledge management system
    org-mode implementation of Roam as in RoamResearch - networked notetaking
    Keypoint is that it has back-links so you can build up a network of information points
**** Install
Successful on 2020-08-04
In [[file:packages.el][Packages.el]]
(package! org-roam
  :recipe (:host github :repo "org-roam/org-roam"))
  and in [[file:config.el][config.el]]  under :lang (org +roam)
**** Commands
[SPC] n r
then
I for insert new blank file
r for buffer showing backlinks
g for graph of information points

**** Links
https://www.orgroam.com/
https://www.orgroam.com/manual/Getting-Started.html#Getting-Started

*** org-capture
It's essentially a templating system for various types of notes e.g. journal, personal todos
Save personal notes to [[/home/donagh/Dropbox/org-mode/org/notes.org][notes.org]] using [SPC] X n
*** convert csv to org file
* Magit
:about:
For managing git files and repos using emacs. Sublime is too small a term for it.

Magit is a complete text-based user interface to Git. It fills the glaring gap between the Git command-line interface and various GUIs, letting you perform trivial as well as elaborate version control tasks with just a couple of mnemonic key presses. Magit looks like a prettified version of what you get after running a few Git commands but in Magit every bit of visible information is also actionable to an extent that goes far beyond what any Git GUI provides and it takes care of automatically refreshing this output when it becomes outdated. In the background Magit just runs Git commands and if you wish you can see what exactly is being run, making it possible for you to learn the git command-line by using Magit.

Using Magit for a while will make you a more effective version control user. Magit supports and streamlines the use of Git features that most users and developers of other Git clients apparently thought could not be reasonably mapped to a non-command-line interface. Magit is both faster and more intuitive than either the command line or any GUI and these holds for both Git beginners and experts alike.


:end:
** Check version
M-x magit-version
** Webrefs
Homepage                       :: https://magit.vc/

What's new in magit            :: https://www.masteringemacs.org/article/what-new-in-magit-2x
Intro to magit                 :: https://www.masteringemacs.org/article/introduction-magit-emacs-mode-git
Guide to magit                 :: https://www.yanboyang.com/magit/

** Usage
First, move to a 'git' project or open a file in a git project e.g. ~/PORTABLE_ENV
[SPC] g g

Or, the long-winded version:

Run M-x magit-status
This command will open up a window (or prompt you for a Git repository if the buffer’s file directory is not under Git control) and display Magit’s status screen
** Commands / aliases
SPC g i      :: git init
SPC g g      :: git status
?            :: show list of (one-letter) options
s            :: stage
c            :: commit incl. write commit message. Then C-c C-c to finish the commit.
l            :: log
l l          :: (in a git file) opens the "short log"
** ISSUES
2022-07-06
Q. When I write the commit message, do I save and how do I complete the commit?
A. Yes, save and then C-c C-c to complete the commit
* which-key
:overview:

This is the temporary buffer that opens at the bottom when you press a key and shows the available keys / options

:end:

M-x which-key   <-- view options for which-key

which-key-show-full-major-mode  -- show all bindings in the map for the current mode
* Tramp
:about:
(Transparent Remote Access, Multiple Protocols)
Remote access to files - TBD
I haven't used it yet. Note added 2022-09-25
Has good reputation.
:end:

* Help for [SPC]
SPC
    SPC find file
    , switch buffer
    . browse files
    : M-x    (Same as Alt-X)
    ; EX
    < switch buffer
    ` eval
    u universal arg
    b x pop up scratch
    ~ toggle last popup
    TAB workspace
        TAB Display tab bar
        . switch workspace
        0 last workspace
        1-9 : x workspace
        L load session
        S autosave current session
        X delete sessions
        [ previous workspace
        ] next workspace
        d delete workspace
        l load workspace from file
        n workspace
        s save workspace to file
        x kill all buffers'
    / search
        i symbols
        I symbols accr. buffers
        b buffer
        d directory
        o Online providers
        p project
    [ prev
        S spelling corr
        [ text size
        b buffer
        d diff
        e error
        h smart jump
        s spelling error
        t todo
        w workspace
    ] next
        S spelling corr
        [ text size
        b buffer
        d diff
        e error
        h smart jump
        s spelling error
        t todo
        w workspace
    b buffer
        B switch buffer
        S sudo edit
        [ prev
        ] next
        b switch ws buffer
        k kill buffer
        n new empty buffer
        o kill other buffers
        s save buffer
        x pop scratch buffer
        z burry buffer
    c code
        d jump to def
        D jump to ref
        e evaluate buffer
        E evaluate and replace
        b build
        r repl
        x list errors
    f file
        . find file
        / find file in project
        > sudo find file
        ? find file from here
        E Browse emacs.d
        P browse private config
        R recent project files
        a find other file
        c open project editor config
        d find dir
        e find file in emacs.d
        p find file in private config
        r recent files
        y yank filename
    g git
        c magit commit
        C magit clone
        G list gists
        L list reps
        P magic pull popup
        R git revert
        S git stage
        U git unstange hunk
        [ previous
        ] next
        b magic blame
        d magic dispatch
        f magic find
        g magit status
        i init repo
        l magit buffer log
        p push popup
        r git revert hunk
        s git status
        t git time matchine
    o open
        M mail
        N neotree
        O reveal proj finder
        b browser
        d debugger
        n neotree
        o reveal in finder
        r repl
        t terminal
    p project
        ! run cmd in project root
        . browse
        / find in project
        c compile project
        o find other file
        p switch project
        r recent project files
        t list project tasks
        x invalidate cache
    q quit
        q save and quit
        Q quit
    r remote
        . browse remote files
        > detect remote changes
        D diff local and remote
        U upload local
        d download remote
        u upload local
    s snippets
        S find snippet
        i insert snippet
        n new snippet
        s find snippet for mode
    t toggle
        F frame fullscreen
        I indente
        b big mode
        f flycheck
        g evil goggles
        h impatient modei indet guides
        l line numbers
        p org-tree-slide-mode
        s flyspell
    w window
        + increase height
        - descr height
        < dec width
        = balance windows
        > incr width
        H move left
        J move down
        K move up
        L move right
        R rotate up
        S split
        W prev
        _ set height
        b bottom right
        c close window
        h left
        j down
        k up
        l right
        n new
        o enlargen
        p mru
        q quit
        r rotate down
        s split
        t top left
        u winner undo
        v vsplit
        w next
        | set width |
    Private
        d     'treemacs  ;; Tree directory for files / folders
        a     'org-agenda
        w w   'message-kill-buffer  ;; like vim
        s SPC 'save-buffer  ;; even simpler than w, like vim
        j     'outline-next-visible-heading
        k     'outline-previous-visible-heading
        l     'org-insert-link
        z     '+org/close-all-folds  ;; z M is such a pain
        c SPC 'calendar ;; quick calendar
        i Y   'clipboard-yank ;; paste from system clipboard; Note: SPC i y (lowercase) pastes from emacs yank
* ISSUES
** TODO zo not working
Date: 2023-01-03
Status: Unresolved

using home-made 'z;' instead (for org/fold-toggle)
Tried doom upgrade. No success.

* zArchive
** Spacemacs notes
A lot of these are useful for doom emacs. Especially, org-mode
*** characters
**** LaTeX
   - Characters: \alpha \rightarrow \beta
see snippets below
*** drawers
A way to hide information and reveal it when required
   Types of drawers:
   - Custom made - see mydrawer below
     To open/close, place cursor on the : line and TAB
     :mydrawer:
     This is the content of my first drawer
     :end:
   - Reserved e.g.  properties drawer
*** files
**** find files [SPC] f f OR [SPC] [SPC]
**** save [SPC] f s
**** copy file [SPC] f c
**** filepath [SPC] f y
     copy full filepath and places it in the clipboard for copying - /home/donagh/PORTABLE_ENV/spacemacs/spacemacs_notes.org
*** folding
**** use the vim system: zc, zo, zm, zr for opening and closing folds.
**** or use S-TAB to cycle through folds
*** formatting
   use the symbols fore and aft OR , x and select
**** bold is *bold*
**** italic is /italic/
**** verbatim is =verbatim=
**** strikethrough +strikethrough+
**** underline _underline_
**** source code / literate programming
    To insert a snippet for source code: [SPC] i s and select begin_src

    Example 1 emacs-lisp
   #+BEGIN_SRC emacs-lisp
   (+ 3 58)

   #+END_SRC

   #+RESULTS:
   : 61

   and then pressing C-x C-e OR C-c C-c will show 61 in the mini buffer

    Example 2 python
   #+BEGIN_SRC python
   print(3+43+43+4)


   #+END_SRC

   #+RESULTS:
   : None

   C-c C-c inside the code block (not working)
   #+RESULTS:
   : None

*** help
**** to get help
   [SPC] h d <varies>
   C-h i     <-- info
   Worg is the org-mode wiki at [[ https://orgmode.org/worg/ ][worg]
*** spacemacs_keybindings
   M is the Alt key
   M-x for package install.

*** killring / clipboard
   [SPC] i y
   and then C-j to scroll down to item you want and [RET] to insert to current buffer

*** links
**** [ link ] [ description ]
**** [[www.google.com] [ google.com] the final ] is missing as it would collapse to what you can see on the next line.
**** URLs / links
    [[https://www.google.com][google.com]]
    [[http://donaghmccarthy.ie][donaghmccarthy.ie]]
**** images / files
    To view the following image:
    [[file:~/Images/chainsaw-haircut.png][chainsaw-haircut]]
    1. make a vert. split. ( [SPC] w v) <-- optional
    2. q to cancel image
    Link to a file
    # C-c l to make a link in the link store
    # , l to find and open that link
    [[/home/donagh/PORTABLE_ENV/spacemacs][link to .spacemacs in PORTABLE_ENV]]

**** C-c C-l will allow to make a link. Link:  & Description:
To make a link start with blank line then C-c C-l
***** link in org file
C-c C-l <name of heading> in side double parens

***** file
C-c C-l (SHORTCUT [SPC] l) then type file: and follow the links
After selecting the file you will be asked for the Description (which is what will appear in the file link)
eg link to todos.org
[[file:~/Dropbox/org-mode/org/todos.org][todos.org]]

***** web-ref

   [[http://www.donaghmccarthy.ie][donaghmccarthy.ie]]

*** multiple org files
   Suppose you have many files that you want org-mode to 'watch'. In the dotspacemacs-configuration-layers of .spacemacs:
   Say, work, school and home.
#+BEGIN_SRC elisp
(setq org-agenda-files (list "/home/donagh/org/work.org"
                             "/home/donagh/org/school.org"
                             "/home/donagh/org/home.org"))
#+END_SRC

#+RESULTS:
| /home/donagh/org/work.org | /home/donagh/org/school.org | /home/donagh/org/home.org |

Press C-c a t to enter the global todo list.

*** spacemacs_navigating
**** switching buffers
- [SPC] b n <-- next buffer
- [SPC] , <-- list buffers (C-j to select)
**** within a file
- [SPC] j l then type link to the line (try it!)
    will show links for every file visible in every window!
**** directory
- [SPC] f t to see directory tree and q to quit
*** options
   Placed at start of file
**** title
    "#+TITLE:
**** options
    "#+OPTIONS: html-style: nil
**** startip
    "#+STARTIP: overview
*** org-capture
   For keeping notes, snippets, thoughts etc.
   org-capture --> , c
   Customize templates --> , c C
