* Frontmatter
#+TITLE: Notes for doom
#+DATE: 2020-05-17
#+AUTHOR: Donagh McCarthy
#+OPTIONS:il
#+STARTIP: overview
#+TAGS: help orgmode donaghs

* spacemacs notes
Most of this is useful for doom emacs. Especially, org-mode
** characters
*** LaTeX
   - Characters: \alpha \rightarrow \beta
see snippets below
** drawers
A way to hide information and reveal it when required
   Types of drawers:
   - Custom made - see mydrawer below
     To open/close, place cursor on the : line and TAB
     :mydrawer:
     This is the content of my first drawer
     :end:
   - Reserved e.g.  properties drawer
** files
*** find files [SPC] f f OR [SPC] [SPC]
*** save [SPC] f s
*** copy file [SPC] f c
*** filepath [SPC] f y
     copy full filepath and places it in the clipboard for copying - /home/donagh/PORTABLE_ENV/spacemacs/spacemacs_notes.org
** folding
*** use the vim system: zc, zo, zm, zr for opening and closing folds.
*** or use S-TAB to cycle through folds
** formatting
   use the symbols fore and aft OR , x and select
*** bold is *bold*
*** italic is /italic/
*** verbatim is =verbatim=
*** strikethrough +strikethrough+
*** underline _underline_
*** source code / literate programming
    To insert a snippet for source code: [SPC] i s and select begin_src

    Example 1 emacs-lisp
   #+BEGIN_SRC emacs-lisp
   (+ 3 58)

   #+END_SRC

   #+RESULTS:
   : 61

   and then pressing C-x C-e OR C-c C-c will show 61 in the mini buffer

    Example 2 python
   #+BEGIN_SRC python
   print(3+43+43+4)


   #+END_SRC
   C-c C-c inside the code block (not working)
   #+RESULTS:
   : None

** help
*** to get help
   [SPC] h d <varies>
   C-h i     <-- info
   Worg is the org-mode wiki at [[ https://orgmode.org/worg/ ][worg]
** keybindings
   M is the Alt key
   M-x for package install.

** killring / clipboard
   [SPC] i y
   and then C-j to scroll down to item you want and [RET] to insert to current buffer

** links
*** [ link ] [ description ]
*** [[www.google.com] [ google.com] the final ] is missing as it would collapse to what you can see on the next line.
*** URLs / links
    [[https://www.google.com][google.com]]
    [[http://donaghmccarthy.ie][donaghmccarthy.ie]]
*** images / files
    To view the following image:
    [file:/home/donagh/Images/chainsaw-haircut.png]
    1. make a vert. split. ( , w v) <-- optional
    2. place cursor inside [] , l
    3. q to cancel image
    Link to a file
    # C-c l to make a link in the link store
    # , l to find and open that link
    [[/home/donagh/PORTABLE_ENV/spacemacs][link to .spacemacs in PORTABLE_ENV]]

*** C-c C-l will allow to make a link. Link:  & Description:
   [[http://www.donaghmccarthy.ie][donaghmccarthy.ie]]

** multiple org files
   Suppose you have many files that you want org-mode to 'watch'. In the dotspacemacs-configuration-layers of .spacemacs:
   Say, work, school and home.
#+BEGIN_SRC elisp
(setq org-agenda-files (list "~/org/work.org"
"~/org/school.org"
                             "~/org/home.org"))
#+END_SRC
Press C-c a t to enter the global todo list.

** navigating
*** switching buffers
- [SPC] b n <-- next buffer
- [SPC] , <-- list buffers (C-j to select)
*** within a file
- [SPC] j l then type link to the line (try it!)
    will show links for every file visible in every window!
*** directory
- [SPC] f t to see directory tree and q to quit
** options
   Placed at start of file
*** title
    "#+TITLE:
*** options
    "#+OPTIONS: html-style: nil
*** startip
    "#+STARTIP: overview
** org-capture
   For keeping notes, snippets, thoughts etc.
   org-capture --> , c
   Customize templates --> , c C

** packages
   M-x
   list-packages (available, installed, builtin )
*** eww
    emacs web browser M-x ew
    w
*** jedi
    server (for python?)
*** evil
**** evil-snipe
Navigating in files - short distances
Enable: M-x evil-snipe <-- toggles on/off
f <letter> highlights all <letter>s forward and ; moves to next one.
NOTE: For more comprehensive in-file search look at avy.
**** avy
In-file navigation - specifically on current screen. Highlights using one or two letter pairs to highlight the target
gs [SPC] <letter> (or <letter><anotherletter><letter3> etc)
First the gs [SPC] will dim the text and then <letter> will be highlighted
*** projectile
see projects below

*** treemacs
File tree
[SPC] d
:q to quit
** projects
- Directory should contain one of these files: .projectile or .git
-[SPC] p a <-- To add a new project
- This will allow projectile to manage and find the project.
- [SPC] p p to select a project managed by projectile

** promoting / demoting
*** Headings: C-c C-< and C-c C->
*** moving nodes  : M-up and M-down

** refresh
   spacemacs --> [SPC] f e R
** shell
*** shell
   Call with  [SPC] o e
   There is some issue with .zshrc / .zshenv / PATH which I need to resolve.
*** eshell
[SPC] o E
then zsh -l to make it zsh
    emacs shell
    YouTube video on this at https://www.youtube.com/watch?v=RhYNu6i_uY4
    it's an emacs REPL. e.g.
    $ (length "Donagh")
    $ 6

** snippets
   Yasnippet & Yasnippet-snippets
   [SPC] i s
  This is the "incrementally" snippet in text-mode.

** styling html export
   to export , , h
    #+begin_export html
      <style>
      body {
        color: red;
      }
      </style>

      #+end_export
   source code not displayed

** tables
   | Name   | Age | Gender |
   |--------+-----+--------|
   | Donagh |  58 | M      |
   | Helen  |  28 | F      |
   |       |     |        |
** themes
   [SPC] T s to get a new themes
   [SPC] T n to cycle (or toggle) dark / light if only those listed in the spacemacs config under themes.
** windows
*** [SPC] w d to delete a window
*** [SPC] w s to split a window below
*** [SPC] w v to split a window vert. right


*** [SPC] w l go to window at left
*** [SPC] w j go to window below

* DOOM EMACS
** buffers
list current buffers: [SPC] , *OR* [SPC] b b
change buffer : [SPC] <
** copy / paste
*** How do you paste from the system clipboard?
[SPC] i y <-- displays system clipboard (killring) 2020-05-17_20:36 -- at last
[SPC] i r <-- evil register <-- equivalent to :reg in vim

*** How do you paste to the system clipboard?
Highlight word(s) and y
To copy full line to system clipboard: Y
** configuration
.doom.d directory is the preferred place to store your custom config (not within the Doom directory itself).
See the documentation (Henrik is super great about this)
My config files __are__ indeed in ~/.doom.d and symlinked to ~/PORTABLE_ENV/doom/*.el

** directory tree
*** navigating [SPC] p r
[SPC] p r <-- list recent files
*** dired [SPC] f d
*** projectile - ls in a separate buffer
*** files inside current project [SPC] [SPC]   <-- <space> <space>
this allows to explore inside the current project
*** files outside current project [SPC] .  <-- <space> dot
this allows to explore outside the current project
** elisp
*** REPL
M-x ielm or [SPC] o r
*** see snippets below for begin_src
** files
- save file -> :w OR [SPC] f s
- save buffer -> [SPC] b s OR :w
- open a file -> [SPC] f f and select your file for opening
- insert current file path [SPC] i F <-- ~/PORTABLE_ENV/doom/doom-notes.org
- Finding files: [SPC] f
** general notes
- See spacemacs_notes above. Lots of stuff applies in doom-emacs.
** headlines
Remove a * <-- to promote to parent level
M - up <-- to move up
M - down <-- to move down
** help
FAQ - [SPC] h d f
To refresh the config.el file C-h r r OR doom/reload (in the /home/donagh/.emacs.d/doom-emacs/bin folder)
** installation notes
*** install
from https://github.com/hlissner/doom-emacs
*** config files
"doom install will deploy three files to your DOOMDIR (~/.doom.d)
_init.el_
    Where you’ll find your doom! block, which controls what Doom modules are enabled and in what order they will be loaded.
    This file is evaluated early in the startup process, before any other module has loaded.
_config.el_
    Where 99.99% of your private configuration should go. Anything put here will run after all other modules have loaded.
_packages.el_
    Where you declare what packages to install and where from.
   
*** configuration
~/.doom.d/*
These files are symbolic linked to ~/PORTABLE_ENV/doom/* - to keep my config if reinstalling
~/.emacs/doom-emacs/init.el

** keybindings
See also shortcuts below
[SPC] m        <-- local to to the file type
[SPC] :        <-- M-x
gi             <-- go to previous insert position
C-S-f          <-- toggle full screen - equivalent to F11
C-=            <-- increase text size - equivalent to zoom in
C-_            <-- decrease text size - equivalent to zoom out
DONAGHS
[SPC] w [SPC]  <-- save-buffer = [SPC] f s

** line numbers
[SPC] t l <-- toggles line numbers (which are relative by default)
** math
#+CONSTANTS: pi=3.14159265358979323846
** minor modes
*** To check available minor modes -> C-h m

** org-capture
~stored in ~/PORTABLE_ENV/doom/org~
stored in ~/Dropbox/org-mode/org/

    In Doom it's waaay easier than Spacemacs IMHO:
    [SPC] n
    [SPC] n n <-- new note with the following options:  pers notes, pers todo, journal, templates, templates for projects
    [SPC] n F <-- Browse notes
    [SPC] n s <-- Search notes for text

** packages
*** avy
For navigation.
NOTE: pre-installed in doom
In-file navigation. gs [SPC] <letter>
In-file navigation - specifically on current screen. Highlights using one or two letter pairs to highlight the target
gs [SPC] <letter> (or <letter><anotherletter><letter3> etc)
First the gs [SPC] will dim the text and then <letter> will be highlighted


elephants in your head
oranges are not the only fruit
plain herds are better than awful
*** dired
Buffer for directory
[SPC] f d
To remove details: (
To go to parent:   -
Add a new directory: +
Delete: D x
chmod: M
Select only directories: /* and then t to toggle between directories and files
Select a file or directory: m and then u to unselect
Change a file / dir name: i and then make changes

*** evil
NOTE: Pre-installed in doom
**** evil-snipe
Navigating in files - short distances
Enable: M-x evil-snipe <-- toggles on/off
f <letter> highlights all <letter>s forward and ; moves to next one.
NOTE: For more comprehensive in-file search look at avy.
*** eww
    emacs web browser M-x e
*** meta
**** install new package
in config.el - (require '<package>) and then C-h r r {Need to check if this works}
in config.el - copy the treemacs line then run doom sync in the ~/.emacs.d/doom-emacs/bin folder
OR
(require <package>) in packages.el and then ->% doom sync
**** to run a package
   M-x (also [SPC] :)
   - list-packages (available, installed, builtin )
*** neotree - use treemacs
added (require 'neotree) to config.el on 2020-05-20
*** projectile
directory in a separate buffer
*** treemacs
_CURRENT_ directory / file explorer
M-x treemacs <-- opens explorer for CURRENT directory : keybinding :: tm
:q in treemacs pane to quit
*** treemacs-evil
use vim keys for navigating

** projects
*** manage projects
uses projectile
If you are more familiar with IDEs like Eclipse or IntelliJ, you probably already have a concept of a project in your mind. It’s basically a folder for a particular codebase (probably under version control) that is pretty much a cohesive unit that you work on independently. In Emacs, this grouping and identification is usually managed by Projectile. With Doom, this is installed by default.

from https://medium.com/urbint-engineering/emacs-doom-for-newbies-1f8038604e3b
"
In order to manage projects that you already have, you need to let Projectile know where the projects reside.
Inside of Doom, you do this by modifying the init.el inside your own custom configuration folder:

    ~/.emacs.d/modules/private/<your-user-name>/init.el

For example, my username is “jdemaris” so my folder is ~/.emacs.d/modules/private/jdemaris is my custom folder. Keeping all of your changes in here makes it safer to update the Doom config whenever new versions come out. Inside of my init.el file, I have added a number of Projectile projects:

    (projectile-add-known-project “~/Projects/playground/elixir”)
    (projectile-add-known-project “~/Projects/playground/otp”)"
    test addition
** shortcuts
Set in ~/PORTABLE_ENV/doom/config.el
;; Donaghs - the following keybinding *did* work. :n indicates normal mode
(map! :n "Q" 'org-babel-execute-src-block ) ;; Quantify!
(map! :n "SPC d" 'treemacs ) ;; Directory for files / folders
(map! :n "tt" 'org-todo )
(map! :n "ts" 'org-schedule )
(map! :n "SPC a" 'org-agenda )
(map! :n "SPC w SPC" 'save-buffer )

** snippets
[SPC] i s or just <s [TAB]
The following was a begin src block
#+BEGIN_SRC emacs-lisp
(defun great (name)
  (concat "Hello " name))

(great "Dolly")

#+END_SRC

#+RESULTS:
: Hello Dolly
(To execute: M-x org-babel-execute-source-block :: I made a keybinding to do this. It is Q )


<s and [TAB]

#+BEGIN_SRC emacs-lisp
(+ 11 43)
#+END_SRC

#+RESULTS:
: 54



<l and [TAB]
#+BEGIN_LaTeX
/rarrow
#+END_LaTeX

appear
defamation
** tags :tags:
" An excellent way to implement labels and contexts for cross-correlating information is to assign tags to headlines. "
tags are words preceded by : and ending in : e.g. :donaghs: or :work: - these can then be searched for
To search for tags C-c \ OR C-c / m
see https://www.gnu.org/software/emacs/manual/html_node/org/Tag-searches.html#Tag-searches
** windows
[SPC] w
[SPC] w L <-- to split window
[SPC] w w (toggles) <-- to move to next window

* Org-mode
See  /home/donagh/TODO/ORG-MODE/first.org for my preliminary notes on org-mode.
** shortcuts
Set in ~/PORTABLE_ENV/doom/config.el
*** Modifier keys
M = Alt; S = Shift; C = Ctrl; RET = Enter / Return
- Alt RET = M RET --> New list item at same level
- M-S RET = [ ] if done at a list item
-
-
-
** Agenda / Scheduling
*** NOTES
Agenda - [SPC] a and select from list
SCHEDULE - [SPC] a s OR C-c C-s
DEADLINE C-c C-d - to

*** SHORTCUT New todo --> tt
*** SHORTCUT New schedule --> ts
*** Agenda - to view agenda beyond this week: eg next four weeks --> C-U 28 [SPC] a n
***** Here's a link with good answers
    https://stackoverflow.com/questions/32423127/how-to-view-the-next-days-in-org-modes-agenda#32426234
*** Schedule - How to
***** First, need to be on a list item *** etc. not a plain list i.e. -
then
    C-c C-s and select date using C-j, C-h etc.
***** To set the time
SCHEDULED: <2020-07-04 Sat 09:50>
At the prompt insert the time e.g. 09:50

***** Repeat schedule - e.g.  every week +1w add inside <> as in the example below
    - Weekly shop
    SCHEDULED: <2020-06-13 Sat +1w>
    NOTE: This doesn't appear in the global TODOS because this file is not "registered" in the list of files to be checked.
***** To view schedules ie your agenda
To appear in the global TODOS because the file must be "registered" in the list of files
[SPC] a a <-- to view agenda for coming week
***** To register a file for TODOs

** Todos
To call TODO menu or make a new todo :
tt OR C-c C-t and select from the menu
*** Add TODO item
C-c C-t OR tt and select from the menu
*** Progress Markers
TODO [1/2] [50%] progress markers - without checkboxes
**** DONE item 1
     CLOSED: [2020-05-15 Fri 15:43]
**** item 2
**** TODO item 3
** Make a new (asterisked) item into a todo -> tt and then select from menu
Example
**** HOLD
** CHECKBOXES - Make a new checkbox i.e. [ ]
***** checkbox
shortcut is ]] --> - [ ] (set in Autokey). To toggle checkmark, with cursor inside brackets, C-c C-c
or replace ' ' with X (or vice versa)
[/] for n of m items
[%] for percent
***** this [1/3]
- [X] this item [2/2]
  - [X] Subitem 1
  - [X] Subitem 2
- [ ] Another item
- [ ] This funny one C-c C-x C-b
