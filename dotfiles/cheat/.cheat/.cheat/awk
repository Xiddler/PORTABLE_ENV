# sum integers from a file or stdin, one integer per line:
printf '1\n2\n3\n' | awk '{ sum += $1} END {print sum}'

# using specific character as separator to sum integers from a file or stdin
printf '1:2:3' | awk -F ":" '{print $1+$2+$3}'

# print a multiplication table
seq 9 | sed 'H;g' | awk -v RS='' '{for(i=1;i<=NF;i++)printf("%dx%d=%d%s", i, NR, i*NR, i==NR?"\n":"\t")}'

# Specify output separator character
printf '1 2 3' | awk 'BEGIN {OFS=":"}; {print $1,$2,$3}'

# A selection of Built in Variables
NR  :: No of lines Read to this point 
NF  :: No. of Fields ie columns
FS  :: Field Separator  :: Default = " "
FNR :: Field Number Record
OFS :: Output Field Separator :: Default = " " 
RS  :: Input Record Separator :: Default = " " 
ORS :: Output Record Separator :: Default = "\n"
FILENAME    :: Current Filename

# A selection of Built in String Operators
sub
gsub
length
split
match

# Sample one-liner to extract balance from a csv file
awk -F"," '/11-20/ { e=$6 } /11-11/ { l=$6 } END { print "You have spent " l-e } ' accounts.csv

# Column subtraction
cat file | awk -F '\t' 'BEGIN {SUM=0} {SUM+=$3-$2} END{print SUM}'


