# File management

:e              reload file
:q              quit
:q!             quit without saving changes
:w              write file
:w {file}       write new file
:x              write file and exit

# Movement

    k
  h   l         basic motion
    j

w               next start of word
W               next start of whitespace-delimited word
e               next end of word
E               next end of whitespace-delimited word
b               previous start of word
B               previous start of whitespace-delimited word
0               start of line
$               end of line
gg              go to first line in file
G               go to end of file
gk		move down one displayed line
gj		move up one displayed line

# Insertion
#   To exit from insert mode use Esc or Ctrl-C
#   Enter insertion mode and:

a               append after the cursor
A               append at the end of the line
i               insert before the cursor
I               insert at the beginning of the line
o               create a new line under the cursor
O               create a new line above the cursor
R               enter insert mode but replace instead of inserting chars
:r {file}       insert from file

# Editing

u               undo
yy              yank (copy) a line
y{motion}       yank text that {motion} moves over
p               paste after cursor
P               paste before cursor
<Del> or x      delete a character
dd              delete a line
d{motion}       delete text that {motion} moves over

# Search and replace with the `:substitute` (aka `:s`) command

:s/foo/bar/	replace the first match of 'foo' with 'bar' on the current line only
:s/foo/bar/g	replace all matches (`g` flag) of 'foo' with 'bar' on the current line only
:%s/foo/bar/g	replace all matches of 'foo' with 'bar' in the entire file (`:%s`)
:%s/foo/bar/gc	ask to manually confirm (`c` flag) each replacement 

# Preceding a motion or edition with a number repeats it 'n' times
# Examples:
50k         moves 50 lines up
2dw         deletes 2 words
5yy         copies 5 lines
42G         go to line 42

### DONAGHS ###
# sudo trick
:w !sudo tee %

# installing plugins
.vim/pack/<name>/start/PLUGIN

# check installed / working plugins
ls $HOME/.vim/pack/*/start/*/plugin | grep '.vim$'
or
tail -n30 $HOME/.vimrc G .git


# location of info on my vim plugins
/home/donagh/sd64/zim/Computer/LINUX/1Linux_Live_USB/02a_install_extras/10vim_settings/vim_plugins.txt
eg cd to above folder and ->% grep <surround>

# vim surround
# to put " around the words bear necessity - with cursor on the b of bear
' ys2w" '
# use ysiw when it's only one word " 

#  to change 'funny' to "funny"
' cs'"'


# tab navigation
gt # next tab
gT # prev tab

# Ranges
:12,34s/old/new/g   # substitute in lines 12 to 34 inclusive
12,$                # from line 12 to end of the file
.,$                 # current to end
%                   # all file
1,$                 # equivalent to %

# tab buffers
vim -p file1.text file2.txt # open files in separate tabs
tabe # edit a new file
H   # previous filetab - alias for gt
L   # next filetab - alias for gT

# " open file at line 23
vim +23 <filename>

# navigate tabs
tab left H
tab right  L


# Check installed plugins
:scriptnames
:help local-additions

# Splits
hor. split  : <Leader> H
ver. split  : <Leader> O
swap splits : Ctrl W Shift R
equalize split : Ctrl W =
maximize split   : Ctrl W _ (hor. split)
maximize split   : Ctrl W | (ver. split)
resize split     :res +5 or :vert res -5

# Terminal in vim
:sp |:terminal

# Turn terminal into a vim file
<C-w> <S-n>
# To exit 
# <C-w> <S-i>
# 

# Navigation
C-B --> back one pane
C-F --> forward one pane

# Open file under cursor - custom keybinding
,vf # open vert. split
,hf # open hor. split

# Insert filename in insert mode 
<C-r>%
# Insert filepath in insert mode 
,n


# Remember to use Notes (addon)
:Note
