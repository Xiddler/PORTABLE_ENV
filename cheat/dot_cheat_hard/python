# Desc: Python is a high-level programming language.

# Basic example of server with python
# Will start a Web Server in the current directory on port 8000
# go to http://127.0.0.1:8000

# Python v2.7
python -m SimpleHTTPServer
# Python 3
python -m http.server 8000

# SMTP-Server for debugging, messages will be discarded, and printed on stdout.
python -m smtpd -n -c DebuggingServer localhost:1025

# Pretty print a json
python -mjson.tool

# update pip eg for a virtualenv say webscraping
/home/donaghm/.virtualenvs/webscraping/bin/python3 -m pip install --upgrade pip

# alternatively
python -m pip install --upgrade pip

# update pip - e.g. in fastapi virtualenv
/home/donaghm/.virtualenvs/fastapi/bin/python -m pip install --upgrade pip

# use requirements file
pip install -r requirements.txt

# create a new virtualenv e.g. 'flask'
# python3.9 -m venv <path-to-venv>/venv
python3 -m venv $HOME/.virtualenvs/flask 
# to activate
source $HOME/.virtualenv/flask/bin/activate

##- python header
##- see .vimrc
#!/usr/bin/python3
# -*- coding: utf-8 -*-

# modern formatting
a = "donagh"
print(f"My name is {a}")
->% My name is donagh
# Format specifiers for types, padding, or aligning are specified after the colon character; for instance: f'{price:.3}'

# the final line
if __name__ == "__main__":
    play()

# website with good python tutorials
https://zetcode.com/all/#python

# When using VIM editor to edit PYTHON: ref- python spaces / tabs
:retab # fixes tabs / spaces
:set lcs+=space:Â· # shows a . for each space
:set list # displays the .
:set nolist # hides the .
plugin --> git clone https://github.com/Yggdroot/indentLine
# For code indented with tabs I think there is no need to support it, because you can use :set list lcs=tab:\|\

# Note on argparse
"click to argparse is the same as requests to urllib"

# update pip - specifically in .virtualenvs
(venv)-> % python -m pip install --upgrade pip

# print no newline after this output
print("\nAccessing the class attribute through an object:", end= " ")


# choice menu
choice = None
while choice != "0":
    print \
    ("""
    Critter Caretaker
    0 - Quit
    1 - Listen to your critter
    2 - Feed your critter
    3 - Play with your critter
    """)
choice = input("Choice: ")
print()


