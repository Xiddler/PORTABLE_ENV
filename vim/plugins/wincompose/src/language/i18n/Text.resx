<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="AutodetectLanguage" xml:space="preserve">
    <value>Autodetect</value>
    <comment>The user can configure the application language and choose between English, French, etc. and Autodetect</comment>
  </data>
  <data name="KeyLMenu" xml:space="preserve">
    <value>Left Alt</value>
    <comment>The name of the key on the keyboard</comment>
  </data>
  <data name="KeyRMenu" xml:space="preserve">
    <value>Right Alt</value>
    <comment>The name of the key on the keyboard</comment>
  </data>
  <data name="KeyLControl" xml:space="preserve">
    <value>Left Control</value>
    <comment>The name of the key on the keyboard</comment>
  </data>
  <data name="KeyRControl" xml:space="preserve">
    <value>Right Control</value>
    <comment>The name of the key on the keyboard</comment>
  </data>
  <data name="KeyLWin" xml:space="preserve">
    <value>Left Windows</value>
    <comment>The name of the key on the keyboard</comment>
  </data>
  <data name="KeyRWin" xml:space="preserve">
    <value>Right Windows</value>
    <comment>The name of the key on the keyboard</comment>
  </data>
  <data name="KeyCapital" xml:space="preserve">
    <value>Caps Lock</value>
    <comment>The name of the key on the keyboard</comment>
  </data>
  <data name="KeyNumLock" xml:space="preserve">
    <value>Num Lock</value>
    <comment>The name of the key on the keyboard</comment>
  </data>
  <data name="KeyPause" xml:space="preserve">
    <value>Pause</value>
    <comment>The name of the key on the keyboard</comment>
  </data>
  <data name="KeyApps" xml:space="preserve">
    <value>Menu</value>
    <comment>Also known as Application key</comment>
  </data>
  <data name="KeyEscape" xml:space="preserve">
    <value>Escape</value>
    <comment>The name of the key on the keyboard</comment>
  </data>
  <data name="KeyConvert" xml:space="preserve">
    <value>Conversion</value>
    <comment>The name of the 変換 key on a Japanese keyboard</comment>
  </data>
  <data name="KeyNonConvert" xml:space="preserve">
    <value>Non-conversion</value>
    <comment>The name of the 無変換 key on a Japanese keyboard</comment>
  </data>
  <data name="KeyScroll" xml:space="preserve">
    <value>Scroll Lock</value>
    <comment>The name of the key on the keyboard</comment>
  </data>
  <data name="KeySpace" xml:space="preserve">
    <value>Space</value>
    <comment>The name of the key on the keyboard</comment>
  </data>
  <data name="KeyReturn" xml:space="preserve">
    <value>Return</value>
    <comment>The name of the key on the keyboard</comment>
  </data>
  <data name="Composing" xml:space="preserve">
    <value>Composing</value>
    <comment>The "Composing" section in the settings window</comment>
  </data>
  <data name="UseXorgRules" xml:space="preserve">
    <value>Use sequences from the Xorg project</value>
    <comment></comment>
  </data>
  <data name="UseXorgRulesToolTip" xml:space="preserve">
    <value>Use the 3,000 compose sequences from the Xorg project (http://www.x.org/). These are the sequences most commonly found on a standard Linux system.</value>
    <comment></comment>
  </data>
  <data name="UseXComposeRules" xml:space="preserve">
    <value>Use sequences from the XCompose project</value>
    <comment></comment>
  </data>
  <data name="UseXComposeRulesToolTip" xml:space="preserve">
    <value>Use the 1,000 compose sequences from the XCompose opensource project (https://github.com/kragen/xcompose). These sequences may sometimes conflict with the Xorg ones.</value>
    <comment></comment>
  </data>
  <data name="UseEmojiRules" xml:space="preserve">
    <value>Use WinCompose emoji sequences</value>
    <comment></comment>
  </data>
  <data name="UseEmojiRulesToolTip" xml:space="preserve">
    <value>Use the compose sequences for Emoji provided by the WinCompose author and contributors.</value>
    <comment></comment>
  </data>
  <data name="DebugWindow" xml:space="preserve">
    <value>Debug Window</value>
    <comment>Menu entry to show the debug window</comment>
  </data>
  <data name="ShowSequences" xml:space="preserve">
    <value>Show Sequences…</value>
    <comment></comment>
  </data>
  <data name="Disable" xml:space="preserve">
    <value>Disable</value>
    <comment>Menu entry to disable WinCompose</comment>
  </data>
  <data name="Restart" xml:space="preserve">
    <value>Restart</value>
    <comment></comment>
  </data>
  <data name="DonationPage" xml:space="preserve">
    <value>Donation Page</value>
    <comment>A button to visit the donation page (http://wincompose.info/donate/)</comment>
  </data>
  <data name="VisitWebsite" xml:space="preserve">
    <value>Visit Website</value>
    <comment>A button to visit the website</comment>
  </data>
  <data name="Exit" xml:space="preserve">
    <value>Exit</value>
    <comment></comment>
  </data>
  <data name="UnicodeCharacters" xml:space="preserve">
    <value>Unicode characters</value>
    <comment>Name of the category (Unicode characters, Emoji, User macros, Favorites)</comment>
  </data>
  <data name="Sequences" xml:space="preserve">
    <value>Sequences</value>
    <comment></comment>
  </data>
  <data name="SwapOnInvalid" xml:space="preserve">
    <value>Try to swap the two keys</value>
    <comment></comment>
  </data>
  <data name="SwapOnInvalidToolTip" xml:space="preserve">
    <value>Try to swap the keys of a two-key sequence. For instance, if Compose E A is not a valid sequence, try Compose A E instead.</value>
    <comment></comment>
  </data>
  <data name="Search" xml:space="preserve">
    <value>Search Filter:</value>
    <comment></comment>
  </data>
  <data name="ComposeKey" xml:space="preserve">
    <value>Compose Key:</value>
    <comment></comment>
  </data>
  <data name="ComposeKeyToolTip" xml:space="preserve">
    <value>Select the key that should act as the Compose key.</value>
    <comment></comment>
  </data>
  <data name="ResetTimeout" xml:space="preserve">
    <value>Reset timeout</value>
    <comment>The compose key deactivates itself after a certain configurable delay</comment>
  </data>
  <data name="UnicodeInput" xml:space="preserve">
    <value>Advanced Unicode input</value>
    <comment></comment>
  </data>
  <data name="UnicodeInputToolTip" xml:space="preserve">
    <value>Enable Unicode input for all characters, even those with no compose sequence defined. For instance, the following sequence will output character U+1A3F: Compose U 1 A 3 F Enter</value>
    <comment></comment>
  </data>
  <data name="InvalidSequences" xml:space="preserve">
    <value>On invalid sequences</value>
    <comment>This is the name of a category of settings about what happens when invalid sequences are typed</comment>
  </data>
  <data name="CaseInsensitive" xml:space="preserve">
    <value>Fall back to case insensitive matches</value>
    <comment></comment>
  </data>
  <data name="CaseInsensitiveToolTip" xml:space="preserve">
    <value>If the entered sequence does not exist, but there is one that only differs by case, automatically correct it.</value>
    <comment></comment>
  </data>
  <data name="DiscardOnInvalid" xml:space="preserve">
    <value>Discard all typed characters</value>
    <comment></comment>
  </data>
  <data name="DiscardOnInvalidToolTip" xml:space="preserve">
    <value>If the entered sequence does not exist, discard all the characters that were typed. The default behaviour is to output the characters as if the compose key had not been used.</value>
    <comment></comment>
  </data>
  <data name="BeepOnInvalid" xml:space="preserve">
    <value>Emit a beep</value>
    <comment></comment>
  </data>
  <data name="BeepOnInvalidToolTip" xml:space="preserve">
    <value>If the entered sequence does not exist, emit a system sound.</value>
    <comment></comment>
  </data>
  <data name="Language" xml:space="preserve">
    <value>Interface language:</value>
    <comment></comment>
  </data>
  <data name="LanguageToolTip" xml:space="preserve">
    <value>Select the language that WinCompose uses for the interface. By default the operating system language is used.</value>
    <comment></comment>
  </data>
  <data name="Close" xml:space="preserve">
    <value>Close</value>
    <comment>Close the settings window</comment>
  </data>
  <data name="CopyToClipboard" xml:space="preserve">
    <value>Copy to clipboard</value>
    <comment>Copy character or symbol to the clipboard</comment>
  </data>
  <data name="Emoji" xml:space="preserve">
    <value>Emoji</value>
    <comment>Name of the category (Unicode characters, Emoji, User macros, Favorites)</comment>
  </data>
  <data name="Apply" xml:space="preserve">
    <value>Apply</value>
    <comment>Apply changes from the settings window</comment>
  </data>
  <data name="KeepOriginalKey" xml:space="preserve">
    <value>Maintain original compose key behaviour</value>
    <comment>Should this say “retain” instead of “maintain”?</comment>
  </data>
  <data name="KeepOriginalKeyToolTip" xml:space="preserve">
    <value>This tells WinCompose to make a best effort to retain the original key’s behaviour. For instance, the Alt-Tab shortcut will still work even if Alt is used as the compose key.</value>
    <comment></comment>
  </data>
  <data name="InsertZwsp" xml:space="preserve">
    <value>Insert zero-width spaces in Office apps</value>
    <comment></comment>
  </data>
  <data name="InsertZwspToolTip" xml:space="preserve">
    <value>Microsoft Office applications sometimes change the document font on the fly when entering certain Unicode characters. This feature inserts an invisible character after the Unicode character to work around the bug.</value>
    <comment></comment>
  </data>
  <data name="EmulateCapsLock" xml:space="preserve">
    <value>Emulate Caps Lock using both Shift keys</value>
    <comment></comment>
  </data>
  <data name="EmulateCapsLockToolTip" xml:space="preserve">
    <value>If Caps Lock is used as the compose key, the original behaviour of the key becomes unavailable. This feature allows to turn Caps Lock on by pressing both Shift keys simultaneously.</value>
    <comment></comment>
  </data>
  <data name="ShiftDisablesCapsLock" xml:space="preserve">
    <value>Shift key disables Caps Lock</value>
    <comment></comment>
  </data>
  <data name="ShiftDisablesCapsLockToolTip" xml:space="preserve">
    <value>If Caps Lock is used as the compose key, the original behaviour of the key becomes unavailable. This feature allows to turn Caps Lock off by pressing the Shift key.</value>
    <comment></comment>
  </data>
  <data name="CapsLockCapitalizes" xml:space="preserve">
    <value>Caps Lock always capitalizes letters</value>
    <comment></comment>
  </data>
  <data name="CapsLockCapitalizesToolTip" xml:space="preserve">
    <value>When Caps Lock is on, typing an accented letter such as “é” will always output the corresponding capitalized letter, in this case “É”.</value>
    <comment></comment>
  </data>
  <data name="Categories" xml:space="preserve">
    <value>Categories</value>
    <comment>Header for the list of Unicode character categories</comment>
  </data>
  <data name="InSelectedCategories" xml:space="preserve">
    <value>In selected categories</value>
    <comment></comment>
  </data>
  <data name="Options" xml:space="preserve">
    <value>Options — WinCompose</value>
    <comment>The title of the Options window</comment>
  </data>
  <data name="ShowOptions" xml:space="preserve">
    <value>Options…</value>
    <comment>Microsoft recommends using this instead of Settings or Preferences (https://msdn.microsoft.com/en-us/library/dn742392.aspx)</comment>
  </data>
  <data name="TrayToolTip" xml:space="preserve">
    <value>WinCompose v{2} on {0} ({1} sequences)</value>
    <comment>{0}: compose key name, {1}: number of sequences, {2}: program version number</comment>
  </data>
  <data name="General" xml:space="preserve">
    <value>General</value>
    <comment>The “general” tab of the options window</comment>
  </data>
  <data name="Behavior" xml:space="preserve">
    <value>Behavior</value>
    <comment></comment>
  </data>
  <data name="WindowTitle" xml:space="preserve">
    <value>Sequences — WinCompose</value>
    <comment>The title of the Sequences window</comment>
  </data>
  <data name="UserMacros" xml:space="preserve">
    <value>User-defined macros</value>
    <comment>Name of the category (Unicode characters, Emoji, User macros, Favorites)</comment>
  </data>
  <data name="DisabledToolTip" xml:space="preserve">
    <value>WinCompose is disabled</value>
    <comment></comment>
  </data>
  <data name="KeyInsert" xml:space="preserve">
    <value>Insert</value>
    <comment>The name of the "Insert" key on the keyboard</comment>
  </data>
  <data name="TestTyping" xml:space="preserve">
    <value>Test Typing</value>
    <comment>The "Test Typing" section in the settings window</comment>
  </data>
  <data name="Tweaks" xml:space="preserve">
    <value>Tweaks</value>
    <comment>The "Tweaks" section in the settings window</comment>
  </data>
  <data name="DelaySeconds" xml:space="preserve">
    <value>{0} seconds</value>
    <comment>Format string to display the current reset delay</comment>
  </data>
  <data name="About" xml:space="preserve">
    <value>About</value>
    <comment>About box menu entry</comment>
  </data>
  <data name="Download" xml:space="preserve">
    <value>Download WinCompose {0}</value>
    <comment>Download new version menu entry. {0}: version number</comment>
  </data>
  <data name="AboutBoxTitle" xml:space="preserve">
    <value>About WinCompose</value>
    <comment>Window title of the About box</comment>
  </data>
  <data name="Programming" xml:space="preserve">
    <value>Programming</value>
    <comment>The section where we list all programmers.</comment>
  </data>
  <data name="Translators" xml:space="preserve">
    <value>Translation</value>
    <comment>The section where we list all translators. If you’re reading this, you’re probably a translator, so thank you! You rock!</comment>
  </data>
  <data name="Authors" xml:space="preserve">
    <value>Authors</value>
    <comment>The tab item to see all the program authors.</comment>
  </data>
  <data name="License" xml:space="preserve">
    <value>License</value>
    <comment>US: License, UK: Licence</comment>
  </data>
  <data name="NeedRestart" xml:space="preserve">
    <value>WinCompose needs to be restarted for some changes to take effect.</value>
    <comment>Warning message when the user changes the language in the settings window</comment>
  </data>
  <data name="ReportBug" xml:space="preserve">
    <value>Report a Bug</value>
    <comment>A button to report bugs (opens web browser)</comment>
  </data>
  <data name="Help" xml:space="preserve">
    <value>Help</value>
    <comment>The context menu for about, help, and software updates</comment>
  </data>
  <data name="UpdatesToolTip" xml:space="preserve">
    <value>Updates are available.</value>
    <comment>Message displayed in the notification area tooltip.</comment>
  </data>
  <data name="UserDefinedSequences" xml:space="preserve">
    <value>User-defined sequences</value>
    <comment></comment>
  </data>
  <data name="UserDefinedSequencesEdit" xml:space="preserve">
    <value>Edit</value>
    <comment>A button to open the file containing the user-defined sequences.</comment>
  </data>
  <data name="UserDefinedSequencesReload" xml:space="preserve">
    <value>Reload</value>
    <comment>A button to reload the user-defined sequences.</comment>
  </data>
  <data name="AllowInjected" xml:space="preserve">
    <value>Allow Injected Keys</value>
    <comment></comment>
  </data>
  <data name="AllowInjectedToolTip" xml:space="preserve">
    <value>Do not ignore keys sent by other software like AutoHotkey or Synergy</value>
    <comment></comment>
  </data>
  <data name="KeyPrint" xml:space="preserve">
    <value>Prt Scrn</value>
    <comment>The name of the “Print Screen” key on the keyboard</comment>
  </data>
  <data name="KeyDisabled" xml:space="preserve">
    <value>Disabled</value>
    <comment>String to show instead of the key name when no compose key is configured</comment>
  </data>
  <data name="CheckUpdates" xml:space="preserve">
    <value>Automatically check for updates</value>
    <comment></comment>
  </data>
  <data name="CheckUpdatesToolTip" xml:space="preserve">
    <value>If enabled, WinCompose will connect to the Internet at regular intervals to check for new versions. Updates are not installed automatically.</value>
    <comment></comment>
  </data>
  <data name="KeepIconVisible" xml:space="preserve">
    <value>Try to keep notification area icon always visible</value>
    <comment></comment>
  </data>
  <data name="KeepIconVisibleToolTip" xml:space="preserve">
    <value>By default, Windows will remove the icon from the notification area after a short while. This option attempts to keep it always visible.</value>
    <comment></comment>
  </data>
  <data name="ChangeComposeKey" xml:space="preserve">
    <value>Change…</value>
    <comment>The user can click on this button to change the current compose key.</comment>
  </data>
  <data name="CaptureComposeKey" xml:space="preserve">
    <value>Please press a key to use as your compose key.</value>
    <comment></comment>
  </data>
  <data name="AddToFavorites" xml:space="preserve">
    <value>Add to favorites</value>
    <comment>Add sequence to the list of favorites.</comment>
  </data>
  <data name="DisableIcon" xml:space="preserve">
    <value>Disable notification area icon</value>
    <comment></comment>
  </data>
  <data name="DisableIconToolTip" xml:space="preserve">
    <value>If enabled, WinCompose will no longer display an icon in the notification area. The only way to open the WinCompose interface will then be through the “WinCompose Settings” and “WinCompose Sequences” entries in the startup menu.</value>
    <comment></comment>
  </data>
  <data name="KeyHome" xml:space="preserve">
    <value>Home</value>
    <comment>The name of the “Home” key on the keyboard</comment>
  </data>
  <data name="KeyEnd" xml:space="preserve">
    <value>End</value>
    <comment>The name of the “End” key on the keyboard</comment>
  </data>
  <data name="KeyTab" xml:space="preserve">
    <value>Tab</value>
    <comment>The name of the “Tab” key on the keyboard</comment>
  </data>
  <data name="NoTimeout" xml:space="preserve">
    <value>No timeout</value>
    <comment>Text to show instead of a value in seconds when the reset timeout feature is disabled</comment>
  </data>
  <data name="Advanced" xml:space="preserve">
    <value>Advanced</value>
    <comment>The “Advanced” section in the settings.</comment>
  </data>
  <data name="IgnoreRegex" xml:space="preserve">
    <value>Ignore windows matching this regex:</value>
    <comment>“regex” is shorthand for “regular expression”.</comment>
  </data>
  <data name="IgnoreRegexToolTip" xml:space="preserve">
    <value>WinCompose will be completely disabled when the current window class or window name matches this regular expression.</value>
    <comment></comment>
  </data>
  <data name="AlwaysCompose" xml:space="preserve">
    <value>Alternate compose key is always Compose</value>
    <comment></comment>
  </data>
  <data name="AlwaysComposeToolTip" xml:space="preserve">
    <value>If enabled, all compose keys will be treated as Compose in a sequence. By default, only the first pressed key will act as Compose, and alternate compose keys will keep their original role.</value>
    <comment></comment>
  </data>
  <data name="SpecialThanks" xml:space="preserve">
    <value>Special Thanks</value>
    <comment>The section for random contributors who aren’t programmers or translators. Might be empty.</comment>
  </data>
  <data name="RemoveFromFavorites" xml:space="preserve">
    <value>Remove from favorites</value>
    <comment>Remove sequence from the list of favorites.</comment>
  </data>
  <data name="Favorites" xml:space="preserve">
    <value>Favorites</value>
    <comment>Name of the category (Unicode characters, Emoji, User macros, Favorites)</comment>
  </data>
  <data name="TimeoutToolTip" xml:space="preserve">
    <value>If set, any compose sequence will be cancelled after a certain delay if no keyboard activity is detected.</value>
    <comment></comment>
  </data>
  <data name="KeyboardLed" xml:space="preserve">
    <value>Keyboard LED</value>
    <comment></comment>
  </data>
  <data name="KeyboardLedToolTip" xml:space="preserve">
    <value>If set, the corresponding keyboard LED will be lit when a compose sequence is in progress.</value>
    <comment></comment>
  </data>
  <data name="KeyCompose" xml:space="preserve">
    <value>Compose</value>
    <comment>The short name of the compose key</comment>
  </data>
  <data name="AutoLaunch" xml:space="preserve">
    <value>Launch WinCompose on login</value>
    <comment></comment>
  </data>
  <data name="AutoLaunchToolTip" xml:space="preserve">
    <value>If set, WinCompose will be started when the user logs in.</value>
    <comment></comment>
  </data>
  <data name="Accessibility" xml:space="preserve">
    <value>Accessibility</value>
    <comment></comment>
  </data>
  <data name="MustHoldCapsLock" xml:space="preserve">
    <value>Caps Lock is only active while being held down</value>
    <comment></comment>
  </data>
  <data name="MustHoldCapsLockToolTip" xml:space="preserve">
    <value>Releasing the Caps Lock key will immediately disable it, instead of the more standard behaviour of having to press it a second time.</value>
    <comment></comment>
  </data>
  <data name="RunElevated" xml:space="preserve">
    <value>Run with elevated privileges (recommended)</value>
    <comment></comment>
  </data>
  <data name="RunElevatedToolTip" xml:space="preserve">
    <value>Composition will not work in some applications if WinCompose does not run with elevated privileges. This options reduces the chances that this will happen.</value>
    <comment></comment>
  </data>
</root>
